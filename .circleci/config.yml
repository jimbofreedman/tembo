version: 2.1

var_1: &web_cache_key v2-{{ checksum "yarn.lock" }}

jobs:
  build-backend:
    working_directory: ~/app/backend
    docker:
      - image: circleci/python:3.8.3
        environment:
          DATABASE_URL: postgres://postgres@localhost:5432/default
      - image: circleci/postgres:11.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    steps:
      - checkout:
          path: ~/app
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/local.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/local.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            py.test
      - store_artifacts:
          path: test-reports/
          destination: tr1

  build-web:
    docker:
      - image: circleci/python:3.8.3-node
    working_directory: ~/app/web
    steps:
      - checkout:
          path: ~/app
      - restore_cache:
          key: *web_cache_key
      - run: yarn install
      - save_cache:
          key: *web_cache_key
          paths:
            - "node_modules"
#      - run: yarn run lint
      - run: yarn run build
      - persist_to_workspace:
          root: .
          paths:
            - "build"


  deploy-web:
    docker:
      - image: circleci/python:3.8.3-node
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install netlify-cli
          command: sudo npm install -g --silent netlify-cli
      - run:
          name: Deploy to Netlify
          command: netlify deploy --dir=./build --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-backend
      - build-web
      - deploy-web:
          requires:
            - build-web
