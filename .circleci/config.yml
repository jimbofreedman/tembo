version: 2.1

var_1: &web_cache_key v2-{{ checksum "yarn.lock" }}

orbs:
  aws-s3: circleci/aws-s3@1.0.11

jobs:
  build-backend:
    working_directory: ~/app/backend
    docker:
      - image: circleci/python:3.8.3
        environment:
          DATABASE_URL: postgres://postgres@localhost:5432/default
      - image: circleci/postgres:11.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    steps:
      - checkout:
          path: ~/app
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/local.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/local.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            py.test
      - store_artifacts:
          path: test-reports/
          destination: tr1

  build-web:
    docker:
      - image: circleci/python:3.8.3-node
    working_directory: ~/app/web
    steps:
      - checkout:
          path: ~/app
      - restore_cache:
          key: *web_cache_key
      - run: yarn install
      - save_cache:
          key: *web_cache_key
          paths:
            - "node_modules"
#      - run: yarn run lint
      - run: yarn run build
      - aws-s3/sync:
          from: build
          to: 's3://freedman-io-tembo/'
          overwrite: true
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
          arguments: |
            --cache-control "max-age=86400"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-backend
      - build-web
